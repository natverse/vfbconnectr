[{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"http://natverse.org/vfbconnectr/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Gregory Jefferis  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. vfbconnectr Copyright (C) 2020 Gregory Jefferis This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"http://natverse.org/vfbconnectr/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with vfbconnectr","title":"Getting help with vfbconnectr","text":"Thanks using vfbconnectr. ’re sorry ’re trouble, don’t worry, ’re help! get help quickly possible, please read following:","code":""},{"path":"http://natverse.org/vfbconnectr/SUPPORT.html","id":"search","dir":"","previous_headings":"","what":"Search","title":"Getting help with vfbconnectr","text":"first thing see anyone problem : Search nat-user google group. Search GitHub issues vfbconnectr package. Search GitHub issues across whole natverse case problem related package. can add terms search search box top left page. solves problem, great!","code":""},{"path":"http://natverse.org/vfbconnectr/SUPPORT.html","id":"known-problems","dir":"","previous_headings":"","what":"Known Problems","title":"Getting help with vfbconnectr","text":"need help known problem: found relevant thread nat-user google group: please reply . found GitHub issue: please reply details just like (click emoji button add thumbs ) let us know ’re trouble . ’ll need GitHub login . ’re sure: ask new question nat-user google group linking found.","code":""},{"path":"http://natverse.org/vfbconnectr/SUPPORT.html","id":"new-problems","dir":"","previous_headings":"","what":"New Problems","title":"Getting help with vfbconnectr","text":"looks like new problem : just question: please ask nat-user google group. need report new bug: please file issue. ’re sure: please just ask nat-user google group! problem bug feature request, can easily return report - may able point existing report workaround.","code":""},{"path":"http://natverse.org/vfbconnectr/SUPPORT.html","id":"good-questions-and-bug-reports","dir":"","previous_headings":"","what":"Good Questions and Bug Reports","title":"Getting help with vfbconnectr","text":"specific Include code triggered problem possible, make minimal reproducible example (reprex) much easier us help can run reprex machine without data. might want use sample data nat package help, refer publicly available data online. can use reprex package help prepare reprex. Read Get help! section tidyverse site information. Thanks help!","code":""},{"path":"http://natverse.org/vfbconnectr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gregory Jefferis. Author, maintainer.","code":""},{"path":"http://natverse.org/vfbconnectr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jefferis G (2024). vfbconnectr: R Interface vfb-connect query virtualflybrain.org. R package version 0.1.0, https://natverse.github.io/vfbconnectr, https://pypi.org/project/vfb-connect/, http://natverse.org/vfbconnectr/, https://github.com/natverse/vfbconnectr.","code":"@Manual{,   title = {vfbconnectr: An R Interface to vfb-connect to query virtualflybrain.org},   author = {Gregory Jefferis},   year = {2024},   note = {R package version 0.1.0, https://natverse.github.io/vfbconnectr, https://pypi.org/project/vfb-connect/, http://natverse.org/vfbconnectr/},   url = {https://github.com/natverse/vfbconnectr}, }"},{"path":"http://natverse.org/vfbconnectr/index.html","id":"vfbconnectr","dir":"","previous_headings":"","what":"An R Interface to vfb-connect to query virtualflybrain.org","title":"An R Interface to vfb-connect to query virtualflybrain.org","text":"vfbconnectr provides simple R wrapper (via reticulate) VFB_connect Python library enables programmatic access https://virtualflybrain.org website associated services. VFB_connect developed core VFB team.","code":""},{"path":"http://natverse.org/vfbconnectr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R Interface to vfb-connect to query virtualflybrain.org","text":"vfbconnectr relies reticulate package Python installation. learn reticulate used within R packages, see article. use automatic configuration method. theory offer install necessary python dependencies r-reticulate python environment.","code":"remotes::install_github(\"natverse/vfbconnectr\")"},{"path":"http://natverse.org/vfbconnectr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"An R Interface to vfb-connect to query virtualflybrain.org","text":"R equivalent basic examples Python library. Essentially convert . $ turn ['text'] list(\"text\") good go.","code":"library(vfbconnectr) ## basic example code  vc=VfbConnect()  vc$neo_query_wrapper$get_type_TermInfo(list('FBbt_00003686'))  vc$neo_query_wrapper$get_DataSet_TermInfo(list('Ito2013'))  vc$neo_query_wrapper$get_anatomical_individual_TermInfo(list('VFB_00010001')) # Get all terms relevant to a brain region (all parts and all overlapping cells$ # Query by label supported by default$ vc$get_terms_by_region('fan-shaped body')"},{"path":"http://natverse.org/vfbconnectr/index.html","id":"next-steps","dir":"","previous_headings":"","what":"Next steps","title":"An R Interface to vfb-connect to query virtualflybrain.org","text":"make general R helper function improve formatting results wrap functions R functions improve formatting results avoid need worry whether inputs must list . examples …","code":""},{"path":"http://natverse.org/vfbconnectr/reference/VfbConnect.html","id":null,"dir":"Reference","previous_headings":"","what":"Return reference to VfbConnect object — VfbConnect","title":"Return reference to VfbConnect object — VfbConnect","text":"Return reference VfbConnect object","code":""},{"path":"http://natverse.org/vfbconnectr/reference/VfbConnect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return reference to VfbConnect object — VfbConnect","text":"","code":"VfbConnect(..., raw = FALSE, cache = TRUE)"},{"path":"http://natverse.org/vfbconnectr/reference/VfbConnect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return reference to VfbConnect object — VfbConnect","text":"... Additional arguments passed Python's `VfbConnect`. See examples. raw Whether return python list containing raw JSON (default FALSE) cache Whether cache VfbConnect object (default T since can save time).","code":""},{"path":"http://natverse.org/vfbconnectr/reference/VfbConnect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return reference to VfbConnect object — VfbConnect","text":"list containing processed results (  raw=TRUE) python list containing raw JSON.","code":""},{"path":"http://natverse.org/vfbconnectr/reference/VfbConnect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return reference to VfbConnect object — VfbConnect","text":"See https://pypi.org/project/vfb-connect/. raw=TRUE   option mostly useful see output look like.","code":""},{"path":"http://natverse.org/vfbconnectr/reference/VfbConnect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return reference to VfbConnect object — VfbConnect","text":"","code":"vc=VfbConnect() # large return, so use str str(vc$neo_query_wrapper$get_type_TermInfo(list('FBbt_00003686')), max=2) #> List of 1 #>  $ :List of 10 #>   ..$ term                 :List of 3 #>   ..$ query                : chr \"Get JSON for Class\" #>   ..$ version              : chr \"c58c844\" #>   ..$ parents              :List of 2 #>   ..$ relationships        :List of 3 #>   ..$ related_individuals  : list() #>   ..$ xrefs                : list() #>   ..$ anatomy_channel_image:List of 10 #>   ..$ pub_syn              :List of 6 #>   ..$ def_pubs             :List of 3 # do this to explore # vc$neo_query_wrapper$get_type_TermInfo(list('FBbt_00003686')) %>% View() vc$neo_query_wrapper$get_type_TermInfo(list('FBbt_00003686'), summary=TRUE) #> [[1]] #> [[1]]$label #> [1] \"Kenyon cell\" #>  #> [[1]]$symbol #> [1] \"KC\" #>  #> [[1]]$id #> [1] \"FBbt_00003686\" #>  #> [[1]]$tags #> [1] \"Entity|Anatomy|Cell|Class|Nervous_system|Neuron|has_subClass|hasScRNAseq\" #>  #> [[1]]$parents_label #> [1] \"anterior ectoderm derivative|mushroom body intrinsic neuron\" #>  #> [[1]]$parents_id #> [1] \"FBbt_00025991|FBbt_00007484\" #>  #>   vc$neo_query_wrapper$get_DataSet_TermInfo(list('Ito2013'), summary=TRUE) #> [[1]] #> [[1]]$label #> [1] \"Ito lab adult brain lineage clone image set\" #>  #> [[1]]$symbol #> [1] \"\" #>  #> [[1]]$id #> [1] \"Ito2013\" #>  #> [[1]]$tags #> [1] \"Entity|DataSet|Individual|has_image\" #>  #> [[1]]$description #> [1] \"An exhaustive set of lineage clones covering the adult brain from Kei Ito's  lab.\" #>  #> [[1]]$miniref #> [1] \"Ito et al., 2013, Curr. Biol. 23(8): 644--655\" #>  #> [[1]]$FlyBase #> [1] \"FBrf0221438\" #>  #> [[1]]$PMID #> [1] \"23541729\" #>  #> [[1]]$DOI #> [1] \"10.1016/j.cub.2013.03.015\" #>  #>   vc$neo_query_wrapper$get_anatomical_individual_TermInfo(list('VFB_00010001')) #> [[1]] #> [[1]]$term #> [[1]]$term$core #> [[1]]$term$core$iri #> [1] \"http://virtualflybrain.org/reports/VFB_00010001\" #>  #> [[1]]$term$core$symbol #> [1] \"\" #>  #> [[1]]$term$core$types #>  [1] \"Entity\"                      \"Adult\"                       #>  [3] \"Anatomy\"                     \"Cell\"                        #>  [5] \"Expression_pattern_fragment\" \"Individual\"                  #>  [7] \"Nervous_system\"              \"Neuron\"                      #>  [9] \"VFB\"                         \"has_image\"                   #> [11] \"FlyCircuit\"                  \"NBLAST\"                      #>  #> [[1]]$term$core$short_form #> [1] \"VFB_00010001\" #>  #> [[1]]$term$core$unique_facets #> [1] \"Adult\"                       \"Expression_pattern_fragment\" #> [3] \"Nervous_system\"              \"Neuron\"                      #>  #> [[1]]$term$core$label #> [1] \"fru-F-500075\" #>  #>  #> [[1]]$term$description #> list() #>  #> [[1]]$term$comment #> [1] \"OutAge: Adult 5~15 days\" #>  #>  #> [[1]]$query #> [1] \"Get JSON for Individual\" #>  #> [[1]]$version #> [1] \"c58c844\" #>  #> [[1]]$dataset_license #> [[1]]$dataset_license[[1]] #> [[1]]$dataset_license[[1]]$license #> [[1]]$dataset_license[[1]]$license$core #> [[1]]$dataset_license[[1]]$license$core$iri #> [1] \"http://virtualflybrain.org/reports/VFBlicense_FlyCircuit_License\" #>  #> [[1]]$dataset_license[[1]]$license$core$symbol #> [1] \"\" #>  #> [[1]]$dataset_license[[1]]$license$core$types #> [1] \"Entity\"     \"Individual\" \"License\"    #>  #> [[1]]$dataset_license[[1]]$license$core$short_form #> [1] \"VFBlicense_FlyCircuit_License\" #>  #> [[1]]$dataset_license[[1]]$license$core$unique_facets #> [1] \"License\" #>  #> [[1]]$dataset_license[[1]]$license$core$label #> [1] \"FlyCircuit License\" #>  #>  #> [[1]]$dataset_license[[1]]$license$icon #> [1] \"\" #>  #> [[1]]$dataset_license[[1]]$license$link #> [1] \"\" #>  #>  #> [[1]]$dataset_license[[1]]$dataset #> [[1]]$dataset_license[[1]]$dataset$core #> [[1]]$dataset_license[[1]]$dataset$core$iri #> [1] \"http://virtualflybrain.org/reports/Chiang2010\" #>  #> [[1]]$dataset_license[[1]]$dataset$core$symbol #> [1] \"\" #>  #> [[1]]$dataset_license[[1]]$dataset$core$types #> [1] \"Entity\"     \"DataSet\"    \"Individual\" \"has_image\"  \"FlyCircuit\" #>  #> [[1]]$dataset_license[[1]]$dataset$core$short_form #> [1] \"Chiang2010\" #>  #> [[1]]$dataset_license[[1]]$dataset$core$unique_facets #> [1] \"DataSet\" #>  #> [[1]]$dataset_license[[1]]$dataset$core$label #> [1] \"FlyCircuit 1.0 - single neurons (Chiang2010)\" #>  #>  #> [[1]]$dataset_license[[1]]$dataset$link #> [1] \"http://flybase.org/reports/FBrf0210580.html\" #>  #>  #>  #>  #> [[1]]$parents #> [[1]]$parents[[1]] #> [[1]]$parents[[1]]$symbol #> [1] \"\" #>  #> [[1]]$parents[[1]]$iri #> [1] \"http://purl.obolibrary.org/obo/fbbt/vfb/VFBext_0000004\" #>  #> [[1]]$parents[[1]]$types #> [1] \"Entity\"                      \"Anatomy\"                     #> [3] \"Class\"                       \"Expression_pattern_fragment\" #>  #> [[1]]$parents[[1]]$short_form #> [1] \"VFBext_0000004\" #>  #> [[1]]$parents[[1]]$unique_facets #> [1] \"Anatomy\" #>  #> [[1]]$parents[[1]]$label #> [1] \"expression pattern fragment\" #>  #>  #> [[1]]$parents[[2]] #> [[1]]$parents[[2]]$symbol #> [1] \"\" #>  #> [[1]]$parents[[2]]$iri #> [1] \"http://purl.obolibrary.org/obo/FBbt_00050031\" #>  #> [[1]]$parents[[2]]$types #> [1] \"Entity\"         \"Adult\"          \"Anatomy\"        \"Cell\"           #> [5] \"Class\"          \"Nervous_system\" \"Neuron\"         \"has_subClass\"   #>  #> [[1]]$parents[[2]]$short_form #> [1] \"FBbt_00050031\" #>  #> [[1]]$parents[[2]]$unique_facets #> [1] \"Adult\"          \"Nervous_system\" \"Neuron\"         #>  #> [[1]]$parents[[2]]$label #> [1] \"adult SMPpv1 lineage neuron\" #>  #>  #>  #> [[1]]$relationships #> [[1]]$relationships[[1]] #> [[1]]$relationships[[1]]$relation #> [[1]]$relationships[[1]]$relation$iri #> [1] \"http://purl.obolibrary.org/obo/RO_0002292\" #>  #> [[1]]$relationships[[1]]$relation$database_cross_reference #> list() #>  #> [[1]]$relationships[[1]]$relation$label #> [1] \"expresses\" #>  #> [[1]]$relationships[[1]]$relation$type #> [1] \"expresses\" #>  #> [[1]]$relationships[[1]]$relation$confidence_value #> [1] \"\" #>  #>  #> [[1]]$relationships[[1]]$object #> [[1]]$relationships[[1]]$object$symbol #> [1] \"\" #>  #> [[1]]$relationships[[1]]$object$iri #> [1] \"http://flybase.org/reports/FBal0276838\" #>  #> [[1]]$relationships[[1]]$object$types #> [1] \"Entity\"  \"Class\"   \"Feature\" #>  #> [[1]]$relationships[[1]]$object$short_form #> [1] \"FBal0276838\" #>  #> [[1]]$relationships[[1]]$object$unique_facets #> [1] \"Allele\" #>  #> [[1]]$relationships[[1]]$object$label #> [1] \"Scer\\\\GAL4[fru.P1.D]\" #>  #>  #>  #> [[1]]$relationships[[2]] #> [[1]]$relationships[[2]]$relation #> [[1]]$relationships[[2]]$relation$iri #> [1] \"http://purl.obolibrary.org/obo/RO_0002131\" #>  #> [[1]]$relationships[[2]]$relation$database_cross_reference #> list() #>  #> [[1]]$relationships[[2]]$relation$label #> [1] \"overlaps\" #>  #> [[1]]$relationships[[2]]$relation$type #> [1] \"overlaps\" #>  #> [[1]]$relationships[[2]]$relation$confidence_value #> [1] \"\" #>  #>  #> [[1]]$relationships[[2]]$object #> [[1]]$relationships[[2]]$object$symbol #> [1] \"\" #>  #> [[1]]$relationships[[2]]$object$iri #> [1] \"http://purl.obolibrary.org/obo/FBbt_00045050\" #>  #> [[1]]$relationships[[2]]$object$types #> [1] \"Entity\"                   \"Adult\"                    #> [3] \"Anatomy\"                  \"Class\"                    #> [5] \"Nervous_system\"           \"Synaptic_neuropil\"        #> [7] \"Synaptic_neuropil_domain\" #>  #> [[1]]$relationships[[2]]$object$short_form #> [1] \"FBbt_00045050\" #>  #> [[1]]$relationships[[2]]$object$unique_facets #> [1] \"Adult\"                    \"Nervous_system\"           #> [3] \"Synaptic_neuropil_domain\" #>  #> [[1]]$relationships[[2]]$object$label #> [1] \"flange\" #>  #>  #>  #> [[1]]$relationships[[3]] #> [[1]]$relationships[[3]]$relation #> [[1]]$relationships[[3]]$relation$iri #> [1] \"http://purl.obolibrary.org/obo/RO_0002131\" #>  #> [[1]]$relationships[[3]]$relation$database_cross_reference #> list() #>  #> [[1]]$relationships[[3]]$relation$label #> [1] \"overlaps\" #>  #> [[1]]$relationships[[3]]$relation$type #> [1] \"overlaps\" #>  #> [[1]]$relationships[[3]]$relation$confidence_value #> [1] \"\" #>  #>  #> [[1]]$relationships[[3]]$object #> [[1]]$relationships[[3]]$object$symbol #> [1] \"\" #>  #> [[1]]$relationships[[3]]$object$iri #> [1] \"http://purl.obolibrary.org/obo/FBbt_00007055\" #>  #> [[1]]$relationships[[3]]$object$types #> [1] \"Entity\"                   \"Adult\"                    #> [3] \"Anatomy\"                  \"Class\"                    #> [5] \"Nervous_system\"           \"Synaptic_neuropil\"        #> [7] \"Synaptic_neuropil_domain\" #>  #> [[1]]$relationships[[3]]$object$short_form #> [1] \"FBbt_00007055\" #>  #> [[1]]$relationships[[3]]$object$unique_facets #> [1] \"Adult\"                    \"Nervous_system\"           #> [3] \"Synaptic_neuropil_domain\" #>  #> [[1]]$relationships[[3]]$object$label #> [1] \"superior medial protocerebrum\" #>  #>  #>  #> [[1]]$relationships[[4]] #> [[1]]$relationships[[4]]$relation #> [[1]]$relationships[[4]]$relation$iri #> [1] \"http://purl.obolibrary.org/obo/BFO_0000050\" #>  #> [[1]]$relationships[[4]]$relation$database_cross_reference #> list() #>  #> [[1]]$relationships[[4]]$relation$label #> [1] \"is part of\" #>  #> [[1]]$relationships[[4]]$relation$type #> [1] \"part_of\" #>  #> [[1]]$relationships[[4]]$relation$confidence_value #> [1] \"\" #>  #>  #> [[1]]$relationships[[4]]$object #> [[1]]$relationships[[4]]$object$symbol #> [1] \"\" #>  #> [[1]]$relationships[[4]]$object$iri #> [1] \"http://purl.obolibrary.org/obo/FBbt_00003624\" #>  #> [[1]]$relationships[[4]]$object$types #> [1] \"Entity\"         \"Adult\"          \"Anatomy\"        \"Class\"          #> [5] \"Nervous_system\" #>  #> [[1]]$relationships[[4]]$object$short_form #> [1] \"FBbt_00003624\" #>  #> [[1]]$relationships[[4]]$object$unique_facets #> [1] \"Adult\"          \"Nervous_system\" #>  #> [[1]]$relationships[[4]]$object$label #> [1] \"adult brain\" #>  #>  #>  #> [[1]]$relationships[[5]] #> [[1]]$relationships[[5]]$relation #> [[1]]$relationships[[5]]$relation$iri #> [1] \"http://purl.obolibrary.org/obo/BFO_0000050\" #>  #> [[1]]$relationships[[5]]$relation$database_cross_reference #> list() #>  #> [[1]]$relationships[[5]]$relation$label #> [1] \"is part of\" #>  #> [[1]]$relationships[[5]]$relation$type #> [1] \"part_of\" #>  #> [[1]]$relationships[[5]]$relation$confidence_value #> [1] \"\" #>  #>  #> [[1]]$relationships[[5]]$object #> [[1]]$relationships[[5]]$object$symbol #> [1] \"\" #>  #> [[1]]$relationships[[5]]$object$iri #> [1] \"http://virtualflybrain.org/reports/VFBexp_FBal0276838\" #>  #> [[1]]$relationships[[5]]$object$types #> [1] \"Entity\"             \"Anatomy\"            \"Class\"              #> [4] \"Expression_pattern\" #>  #> [[1]]$relationships[[5]]$object$short_form #> [1] \"VFBexp_FBal0276838\" #>  #> [[1]]$relationships[[5]]$object$unique_facets #> [1] \"Expression_pattern\" #>  #> [[1]]$relationships[[5]]$object$label #> [1] \"Scer\\\\GAL4[fru.P1.D] expression pattern\" #>  #>  #>  #> [[1]]$relationships[[6]] #> [[1]]$relationships[[6]]$relation #> [[1]]$relationships[[6]]$relation$iri #> [1] \"http://purl.obolibrary.org/obo/BFO_0000050\" #>  #> [[1]]$relationships[[6]]$relation$database_cross_reference #> list() #>  #> [[1]]$relationships[[6]]$relation$label #> [1] \"is part of\" #>  #> [[1]]$relationships[[6]]$relation$type #> [1] \"part_of\" #>  #> [[1]]$relationships[[6]]$relation$confidence_value #> [1] \"\" #>  #>  #> [[1]]$relationships[[6]]$object #> [[1]]$relationships[[6]]$object$symbol #> [1] \"\" #>  #> [[1]]$relationships[[6]]$object$iri #> [1] \"http://purl.obolibrary.org/obo/FBbt_00007011\" #>  #> [[1]]$relationships[[6]]$object$types #> [1] \"Entity\"  \"Anatomy\" \"Class\"   #>  #> [[1]]$relationships[[6]]$object$short_form #> [1] \"FBbt_00007011\" #>  #> [[1]]$relationships[[6]]$object$unique_facets #> [1] \"Anatomy\" #>  #> [[1]]$relationships[[6]]$object$label #> [1] \"female organism\" #>  #>  #>  #>  #> [[1]]$related_individuals #> list() #>  #> [[1]]$xrefs #> [[1]]$xrefs[[1]] #> [[1]]$xrefs[[1]]$link_base #> [1] \"http://flycircuit.tw/modules.php?name=clearpage&op=detail_table&neuron=\" #>  #> [[1]]$xrefs[[1]]$site #> [[1]]$xrefs[[1]]$site$symbol #> [1] \"\" #>  #> [[1]]$xrefs[[1]]$site$iri #> [1] \"http://virtualflybrain.org/reports/FlyCircuit\" #>  #> [[1]]$xrefs[[1]]$site$types #> [1] \"Entity\"     \"Individual\" \"Site\"       #>  #> [[1]]$xrefs[[1]]$site$short_form #> [1] \"FlyCircuit\" #>  #> [[1]]$xrefs[[1]]$site$unique_facets #> [1] \"Site\" #>  #> [[1]]$xrefs[[1]]$site$label #> [1] \"FlyCircuit 1.0\" #>  #>  #> [[1]]$xrefs[[1]]$is_data_source #> [1] TRUE #>  #> [[1]]$xrefs[[1]]$link_postfix #> [1] \"\" #>  #> [[1]]$xrefs[[1]]$icon #> [1] \"\" #>  #> [[1]]$xrefs[[1]]$accession #> [1] \"fru-F-500075\" #>  #> [[1]]$xrefs[[1]]$link_text #> [1] \"fru-F-500075 on FlyCircuit 1.0\" #>  #> [[1]]$xrefs[[1]]$homepage #> [1] \"http://flycircuit.tw\" #>  #>  #>  #> [[1]]$channel_image #> [[1]]$channel_image[[1]] #> [[1]]$channel_image[[1]]$image #> [[1]]$channel_image[[1]]$image$image_nrrd #> [1] \"http://www.virtualflybrain.org/data/VFB/i/0001/0001/VFB_00101567/volume.nrrd\" #>  #> [[1]]$channel_image[[1]]$image$image_swc #> [1] \"http://www.virtualflybrain.org/data/VFB/i/0001/0001/VFB_00101567/volume.swc\" #>  #> [[1]]$channel_image[[1]]$image$template_channel #> [[1]]$channel_image[[1]]$image$template_channel$symbol #> [1] \"\" #>  #> [[1]]$channel_image[[1]]$image$template_channel$iri #> [1] \"http://virtualflybrain.org/reports/VFBc_00101567\" #>  #> [[1]]$channel_image[[1]]$image$template_channel$types #> [1] \"Entity\"     \"Individual\" \"Template\"   #>  #> [[1]]$channel_image[[1]]$image$template_channel$short_form #> [1] \"VFBc_00101567\" #>  #> [[1]]$channel_image[[1]]$image$template_channel$unique_facets #> list() #>  #> [[1]]$channel_image[[1]]$image$template_channel$label #> [1] \"JRC2018Unisex_c\" #>  #>  #> [[1]]$channel_image[[1]]$image$index #> list() #>  #> [[1]]$channel_image[[1]]$image$template_anatomy #> [[1]]$channel_image[[1]]$image$template_anatomy$symbol #> [1] \"\" #>  #> [[1]]$channel_image[[1]]$image$template_anatomy$iri #> [1] \"http://virtualflybrain.org/reports/VFB_00101567\" #>  #> [[1]]$channel_image[[1]]$image$template_anatomy$types #> [1] \"Entity\"         \"Adult\"          \"Anatomy\"        \"Individual\"     #> [5] \"Nervous_system\" \"Template\"       \"has_image\"      #>  #> [[1]]$channel_image[[1]]$image$template_anatomy$short_form #> [1] \"VFB_00101567\" #>  #> [[1]]$channel_image[[1]]$image$template_anatomy$unique_facets #> [1] \"Adult\"          \"Nervous_system\" #>  #> [[1]]$channel_image[[1]]$image$template_anatomy$label #> [1] \"JRC2018Unisex\" #>  #>  #> [[1]]$channel_image[[1]]$image$image_wlz #> [1] \"http://www.virtualflybrain.org/data/VFB/i/0001/0001/VFB_00101567/volume.wlz\" #>  #> [[1]]$channel_image[[1]]$image$image_obj #> [1] \"http://www.virtualflybrain.org/data/VFB/i/0001/0001/VFB_00101567/volume.obj\" #>  #> [[1]]$channel_image[[1]]$image$image_thumbnail #> [1] \"http://www.virtualflybrain.org/data/VFB/i/0001/0001/VFB_00101567/thumbnail.png\" #>  #> [[1]]$channel_image[[1]]$image$image_folder #> [1] \"http://www.virtualflybrain.org/data/VFB/i/0001/0001/VFB_00101567/\" #>  #>  #> [[1]]$channel_image[[1]]$channel #> [[1]]$channel_image[[1]]$channel$symbol #> [1] \"\" #>  #> [[1]]$channel_image[[1]]$channel$iri #> [1] \"http://virtualflybrain.org/reports/VFBc_00010001\" #>  #> [[1]]$channel_image[[1]]$channel$types #> [1] \"Entity\"     \"Individual\" \"VFB\"        #>  #> [[1]]$channel_image[[1]]$channel$short_form #> [1] \"VFBc_00010001\" #>  #> [[1]]$channel_image[[1]]$channel$unique_facets #> list() #>  #> [[1]]$channel_image[[1]]$channel$label #> [1] \"fru-F-500075-c\" #>  #>  #> [[1]]$channel_image[[1]]$imaging_technique #> [[1]]$channel_image[[1]]$imaging_technique$symbol #> [1] \"Confocal\" #>  #> [[1]]$channel_image[[1]]$imaging_technique$iri #> [1] \"http://purl.obolibrary.org/obo/FBbi_00000251\" #>  #> [[1]]$channel_image[[1]]$imaging_technique$types #> [1] \"Entity\"       \"Class\"        \"has_subClass\" #>  #> [[1]]$channel_image[[1]]$imaging_technique$short_form #> [1] \"FBbi_00000251\" #>  #> [[1]]$channel_image[[1]]$imaging_technique$unique_facets #> [1] \"Class\" #>  #> [[1]]$channel_image[[1]]$imaging_technique$label #> [1] \"confocal microscopy\" #>  #>  #>  #> [[1]]$channel_image[[2]] #> [[1]]$channel_image[[2]]$image #> [[1]]$channel_image[[2]]$image$image_nrrd #> [1] \"http://www.virtualflybrain.org/data/VFB/i/0001/0001/VFB_00017894/volume.nrrd\" #>  #> [[1]]$channel_image[[2]]$image$image_swc #> [1] \"http://www.virtualflybrain.org/data/VFB/i/0001/0001/VFB_00017894/volume.swc\" #>  #> [[1]]$channel_image[[2]]$image$template_channel #> [[1]]$channel_image[[2]]$image$template_channel$symbol #> [1] \"\" #>  #> [[1]]$channel_image[[2]]$image$template_channel$iri #> [1] \"http://virtualflybrain.org/reports/VFBc_00017894\" #>  #> [[1]]$channel_image[[2]]$image$template_channel$types #> [1] \"Entity\"     \"Individual\" \"Template\"   \"VFB\"        #>  #> [[1]]$channel_image[[2]]$image$template_channel$short_form #> [1] \"VFBc_00017894\" #>  #> [[1]]$channel_image[[2]]$image$template_channel$unique_facets #> list() #>  #> [[1]]$channel_image[[2]]$image$template_channel$label #> [1] \"JFRC2_template_c\" #>  #>  #> [[1]]$channel_image[[2]]$image$index #> list() #>  #> [[1]]$channel_image[[2]]$image$template_anatomy #> [[1]]$channel_image[[2]]$image$template_anatomy$symbol #> [1] \"\" #>  #> [[1]]$channel_image[[2]]$image$template_anatomy$iri #> [1] \"http://virtualflybrain.org/reports/VFB_00017894\" #>  #> [[1]]$channel_image[[2]]$image$template_anatomy$types #> [1] \"Entity\"         \"Adult\"          \"Anatomy\"        \"Individual\"     #> [5] \"Nervous_system\" \"Template\"       \"VFB\"            \"has_image\"      #>  #> [[1]]$channel_image[[2]]$image$template_anatomy$short_form #> [1] \"VFB_00017894\" #>  #> [[1]]$channel_image[[2]]$image$template_anatomy$unique_facets #> [1] \"Adult\"          \"Nervous_system\" #>  #> [[1]]$channel_image[[2]]$image$template_anatomy$label #> [1] \"adult brain template JFRC2\" #>  #>  #> [[1]]$channel_image[[2]]$image$image_wlz #> [1] \"http://www.virtualflybrain.org/data/VFB/i/0001/0001/VFB_00017894/volume.wlz\" #>  #> [[1]]$channel_image[[2]]$image$image_obj #> [1] \"http://www.virtualflybrain.org/data/VFB/i/0001/0001/VFB_00017894/volume.obj\" #>  #> [[1]]$channel_image[[2]]$image$image_thumbnail #> [1] \"http://www.virtualflybrain.org/data/VFB/i/0001/0001/VFB_00017894/thumbnail.png\" #>  #> [[1]]$channel_image[[2]]$image$image_folder #> [1] \"http://www.virtualflybrain.org/data/VFB/i/0001/0001/VFB_00017894/\" #>  #>  #> [[1]]$channel_image[[2]]$channel #> [[1]]$channel_image[[2]]$channel$symbol #> [1] \"\" #>  #> [[1]]$channel_image[[2]]$channel$iri #> [1] \"http://virtualflybrain.org/reports/VFBc_00010001\" #>  #> [[1]]$channel_image[[2]]$channel$types #> [1] \"Entity\"     \"Individual\" \"VFB\"        #>  #> [[1]]$channel_image[[2]]$channel$short_form #> [1] \"VFBc_00010001\" #>  #> [[1]]$channel_image[[2]]$channel$unique_facets #> list() #>  #> [[1]]$channel_image[[2]]$channel$label #> [1] \"fru-F-500075-c\" #>  #>  #> [[1]]$channel_image[[2]]$imaging_technique #> [[1]]$channel_image[[2]]$imaging_technique$symbol #> [1] \"Confocal\" #>  #> [[1]]$channel_image[[2]]$imaging_technique$iri #> [1] \"http://purl.obolibrary.org/obo/FBbi_00000251\" #>  #> [[1]]$channel_image[[2]]$imaging_technique$types #> [1] \"Entity\"       \"Class\"        \"has_subClass\" #>  #> [[1]]$channel_image[[2]]$imaging_technique$short_form #> [1] \"FBbi_00000251\" #>  #> [[1]]$channel_image[[2]]$imaging_technique$unique_facets #> [1] \"Class\" #>  #> [[1]]$channel_image[[2]]$imaging_technique$label #> [1] \"confocal microscopy\" #>  #>  #>  #>  #> [[1]]$pub_syn #> [[1]]$pub_syn[[1]] #> [[1]]$pub_syn[[1]]$synonym #> [[1]]$pub_syn[[1]]$synonym$scope #> [1] \"has_exact_synonym\" #>  #> [[1]]$pub_syn[[1]]$synonym$label #> [1] \"FruMARCM-F000584_seg002\" #>  #> [[1]]$pub_syn[[1]]$synonym$type #> [1] \"\" #>  #>  #> [[1]]$pub_syn[[1]]$pub #> [[1]]$pub_syn[[1]]$pub$core #> [[1]]$pub_syn[[1]]$pub$core$symbol #> [1] \"\" #>  #> [[1]]$pub_syn[[1]]$pub$core$iri #> [1] \"http://flybase.org/reports/Unattributed\" #>  #> [[1]]$pub_syn[[1]]$pub$core$types #> [1] \"Entity\"     \"Individual\" \"pub\"        #>  #> [[1]]$pub_syn[[1]]$pub$core$short_form #> [1] \"Unattributed\" #>  #> [[1]]$pub_syn[[1]]$pub$core$unique_facets #> [1] \"pub\" #>  #> [[1]]$pub_syn[[1]]$pub$core$label #> [1] \"\" #>  #>  #> [[1]]$pub_syn[[1]]$pub$FlyBase #> [1] \"\" #>  #> [[1]]$pub_syn[[1]]$pub$PubMed #> [1] \"\" #>  #> [[1]]$pub_syn[[1]]$pub$DOI #> [1] \"\" #>  #>  #>  #> [[1]]$pub_syn[[2]] #> [[1]]$pub_syn[[2]]$synonym #> [[1]]$pub_syn[[2]]$synonym$scope #> [1] \"has_exact_synonym\" #>  #> [[1]]$pub_syn[[2]]$synonym$label #> [1] \"fru-F-500075\" #>  #> [[1]]$pub_syn[[2]]$synonym$type #> [1] \"\" #>  #>  #> [[1]]$pub_syn[[2]]$pub #> [[1]]$pub_syn[[2]]$pub$core #> [[1]]$pub_syn[[2]]$pub$core$symbol #> [1] \"\" #>  #> [[1]]$pub_syn[[2]]$pub$core$iri #> [1] \"http://flybase.org/reports/Unattributed\" #>  #> [[1]]$pub_syn[[2]]$pub$core$types #> [1] \"Entity\"     \"Individual\" \"pub\"        #>  #> [[1]]$pub_syn[[2]]$pub$core$short_form #> [1] \"Unattributed\" #>  #> [[1]]$pub_syn[[2]]$pub$core$unique_facets #> [1] \"pub\" #>  #> [[1]]$pub_syn[[2]]$pub$core$label #> [1] \"\" #>  #>  #> [[1]]$pub_syn[[2]]$pub$FlyBase #> [1] \"\" #>  #> [[1]]$pub_syn[[2]]$pub$PubMed #> [1] \"\" #>  #> [[1]]$pub_syn[[2]]$pub$DOI #> [1] \"\" #>  #>  #>  #>  #> [[1]]$def_pubs #> list() #>  #>  # Get all terms relevant to a brain region (all parts and all overlapping cells$ # Query by label supported by default vc$get_terms_by_region('fan-shaped body') %>%   vc_df() %>%   head(10) #> Error in (function (..., row.names = NULL, check.rows = FALSE, check.names = TRUE,     fix.empty.names = TRUE, stringsAsFactors = FALSE) {    data.row.names <- if (check.rows && is.null(row.names))         function(current, new, i) {            if (is.character(current))                 new <- as.character(new)            if (is.character(new))                 current <- as.character(current)            if (anyDuplicated(new))                 return(current)            if (is.null(current))                 return(new)            if (all(current == new) || all(current == \"\"))                 return(new)            stop(gettextf(\"mismatch of row names in arguments of 'data.frame', item %d\",                 i), domain = NA)        }    else function(current, new, i) {        current %||% if (anyDuplicated(new)) {            warning(gettextf(\"some row.names duplicated: %s --> row.names NOT used\",                 paste(which(duplicated(new)), collapse = \",\")),                 domain = NA)            current        }        else new    }    object <- as.list(substitute(list(...)))[-1L]    mirn <- missing(row.names)    mrn <- is.null(row.names)    x <- list(...)    n <- length(x)    if (n < 1L) {        if (!mrn) {            if (is.object(row.names) || !is.integer(row.names))                 row.names <- as.character(row.names)            if (anyNA(row.names))                 stop(\"row names contain missing values\")            if (anyDuplicated(row.names))                 stop(gettextf(\"duplicate row.names: %s\", paste(unique(row.names[duplicated(row.names)]),                   collapse = \", \")), domain = NA)        }        else row.names <- integer()        return(structure(list(), names = character(), row.names = row.names,             class = \"data.frame\"))    }    vnames <- names(x)    if (length(vnames) != n)         vnames <- character(n)    no.vn <- !nzchar(vnames)    vlist <- vnames <- as.list(vnames)    nrows <- ncols <- integer(n)    for (i in seq_len(n)) {        xi <- if (is.character(x[[i]]) || is.list(x[[i]]))             as.data.frame(x[[i]], optional = TRUE, stringsAsFactors = stringsAsFactors)        else as.data.frame(x[[i]], optional = TRUE)        nrows[i] <- .row_names_info(xi)        ncols[i] <- length(xi)        namesi <- names(xi)        if (ncols[i] > 1L) {            if (length(namesi) == 0L)                 namesi <- seq_len(ncols[i])            vnames[[i]] <- if (no.vn[i])                 namesi            else paste(vnames[[i]], namesi, sep = \".\")        }        else if (length(namesi)) {            vnames[[i]] <- namesi        }        else if (fix.empty.names && no.vn[[i]]) {            tmpname <- deparse(object[[i]], nlines = 1L)[1L]            if (startsWith(tmpname, \"I(\") && endsWith(tmpname,                 \")\")) {                ntmpn <- nchar(tmpname, \"c\")                tmpname <- substr(tmpname, 3L, ntmpn - 1L)            }            vnames[[i]] <- tmpname        }        if (mirn && nrows[i] > 0L) {            rowsi <- attr(xi, \"row.names\")            if (any(nzchar(rowsi)))                 row.names <- data.row.names(row.names, rowsi,                   i)        }        nrows[i] <- abs(nrows[i])        vlist[[i]] <- xi    }    nr <- max(nrows)    for (i in seq_len(n)[nrows < nr]) {        xi <- vlist[[i]]        if (nrows[i] > 0L && (nr%%nrows[i] == 0L)) {            xi <- unclass(xi)            fixed <- TRUE            for (j in seq_along(xi)) {                xi1 <- xi[[j]]                if (is.vector(xi1) || is.factor(xi1))                   xi[[j]] <- rep(xi1, length.out = nr)                else if (is.character(xi1) && inherits(xi1, \"AsIs\"))                   xi[[j]] <- structure(rep(xi1, length.out = nr),                     class = class(xi1))                else if (inherits(xi1, \"Date\") || inherits(xi1,                   \"POSIXct\"))                   xi[[j]] <- rep(xi1, length.out = nr)                else {                  fixed <- FALSE                  break                }            }            if (fixed) {                vlist[[i]] <- xi                next            }        }        stop(gettextf(\"arguments imply differing number of rows: %s\",             paste(unique(nrows), collapse = \", \")), domain = NA)    }    value <- unlist(vlist, recursive = FALSE, use.names = FALSE)    vnames <- as.character(unlist(vnames[ncols > 0L]))    if (fix.empty.names && any(noname <- !nzchar(vnames)))         vnames[noname] <- paste0(\"Var.\", seq_along(vnames))[noname]    if (check.names) {        if (fix.empty.names)             vnames <- make.names(vnames, unique = TRUE)        else {            nz <- nzchar(vnames)            vnames[nz] <- make.names(vnames[nz], unique = TRUE)        }    }    names(value) <- vnames    if (!mrn) {        if (length(row.names) == 1L && nr != 1L) {            if (is.character(row.names))                 row.names <- match(row.names, vnames, 0L)            if (length(row.names) != 1L || row.names < 1L ||                 row.names > length(vnames))                 stop(\"'row.names' should specify one of the variables\")            i <- row.names            row.names <- value[[i]]            value <- value[-i]        }        else if (!is.null(row.names) && length(row.names) !=             nr)             stop(\"row names supplied are of the wrong length\")    }    else if (!is.null(row.names) && length(row.names) != nr) {        warning(\"row names were found from a short variable and have been discarded\")        row.names <- NULL    }    class(value) <- \"data.frame\"    if (is.null(row.names))         attr(value, \"row.names\") <- .set_row_names(nr)    else {        if (is.object(row.names) || !is.integer(row.names))             row.names <- as.character(row.names)        if (anyNA(row.names))             stop(\"row names contain missing values\")        if (anyDuplicated(row.names))             stop(gettextf(\"duplicate row.names: %s\", paste(unique(row.names[duplicated(row.names)]),                 collapse = \", \")), domain = NA)        row.names(value) <- row.names    }    value})(iri = \"http://purl.obolibrary.org/obo/FBbt_00007491\", symbol = \"\",     types = c(\"Entity\", \"Adult\", \"Anatomy\", \"Class\", \"Nervous_system\",     \"Synaptic_neuropil\", \"Synaptic_neuropil_subdomain\"), short_form = \"FBbt_00007491\",     unique_facets = c(\"Adult\", \"Nervous_system\", \"Synaptic_neuropil_subdomain\"    ), label = \"fan-shaped body layer 4\", check.names = FALSE,     fix.empty.names = TRUE, stringsAsFactors = FALSE): arguments imply differing number of rows: 1, 7, 3  # the same but returning raw JSON vc2=VfbConnect(raw=TRUE) vc2$neo_query_wrapper$get_type_TermInfo(list('FBbt_00003686'), summary=TRUE) #> [{'label': 'Kenyon cell', 'symbol': 'KC', 'id': 'FBbt_00003686', 'tags': 'Entity|Anatomy|Cell|Class|Nervous_system|Neuron|has_subClass|hasScRNAseq', 'parents_label': 'anterior ectoderm derivative|mushroom body intrinsic neuron', 'parents_id': 'FBbt_00025991|FBbt_00007484'}]  if (FALSE) { # \\dontrun{ # specify a particular neo4j graph database endpoint vc = VfbConnect(neo_endpoint=\"http://pdb.p2.virtualflybrain.org\") } # }"},{"path":"http://natverse.org/vfbconnectr/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"http://natverse.org/vfbconnectr/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"http://natverse.org/vfbconnectr/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"http://natverse.org/vfbconnectr/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"http://natverse.org/vfbconnectr/reference/read.neurons.vfb.html","id":null,"dir":"Reference","previous_headings":"","what":"Read neurons from VFB, optionally using a query — read.neurons.vfb","title":"Read neurons from VFB, optionally using a query — read.neurons.vfb","text":"Read neurons VFB, optionally using query","code":""},{"path":"http://natverse.org/vfbconnectr/reference/read.neurons.vfb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read neurons from VFB, optionally using a query — read.neurons.vfb","text":"","code":"read.neurons.vfb(x, template = \"JRC2018Unisex\", ...)"},{"path":"http://natverse.org/vfbconnectr/reference/read.neurons.vfb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read neurons from VFB, optionally using a query — read.neurons.vfb","text":"x VFB ids query passed get_instances template string describing valid VFB template brain ... Additional arguments passed read.neurons","code":""},{"path":"http://natverse.org/vfbconnectr/reference/read.neurons.vfb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read neurons from VFB, optionally using a query — read.neurons.vfb","text":"neuronlist object returned   read.neurons.","code":""},{"path":"http://natverse.org/vfbconnectr/reference/read.neurons.vfb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read neurons from VFB, optionally using a query — read.neurons.vfb","text":"","code":"# \\donttest{ oavpm3=read.neurons.vfb(\"octopaminergic VPM3 neuron\") #> Warning: RGL: unable to open X11 display #> Warning: 'rgl.init' failed, running with 'rgl.useNULL = TRUE'. #> Registered S3 method overwritten by 'nat': #>   method             from #>   as.mesh3d.ashape3d rgl  oavpm3[,c('label','dataset', 'id')] #>                                                                             label #> OA_VPM3_NO2_NO3__L__FlyEM_HB_5813061260_ OA-VPM3(NO2/NO3)_L (FlyEM-HB:5813061260) #> OA_VPM3_NO2_NO3__R__FlyEM_HB_329566174_                    OA-VPM3 (FAFB:1329078) #> OA_VPM3__FAFB_1329078_                    OA-VPM3(NO2/NO3)_R (FlyEM-HB:329566174) #>                                                        dataset           id #> OA_VPM3_NO2_NO3__L__FlyEM_HB_5813061260_ Xu2020NeuronsV1point1 VFB_jrchk10e #> OA_VPM3_NO2_NO3__R__FlyEM_HB_329566174_              Sayin2019 VFB_001001dr #> OA_VPM3__FAFB_1329078_                   Xu2020NeuronsV1point1 VFB_jrchk10d # }  if (FALSE) { # \\dontrun{ library(nat) # colour by dataset of origin plot3d(oavpm3, col=dataset) } # }"},{"path":"http://natverse.org/vfbconnectr/reference/vc_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience function to turn vfb_connect summary results into data.frames — vc_df","title":"Convenience function to turn vfb_connect summary results into data.frames — vc_df","text":"Convenience function turn vfb_connect summary results data.frames","code":""},{"path":"http://natverse.org/vfbconnectr/reference/vc_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function to turn vfb_connect summary results into data.frames — vc_df","text":"","code":"vc_df(x, ..., tibble = FALSE)"},{"path":"http://natverse.org/vfbconnectr/reference/vc_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience function to turn vfb_connect summary results into data.frames — vc_df","text":"x summary result VfbConnect call ... additional arguments passed .data.frame as_tibble tibble Whether return tibble rather regular data.frame","code":""},{"path":"http://natverse.org/vfbconnectr/reference/vc_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convenience function to turn vfb_connect summary results into data.frames — vc_df","text":"","code":"vc=VfbConnect() KC_types = vc$get_subclasses(\"Kenyon cell\", summary=TRUE) vc_df(KC_types) #>                                                         label     symbol #> 1                                   Kenyon cell of main calyx            #> 2                                 alpha/beta core Kenyon cell     KCab-c #> 3                                      gamma main Kenyon cell      KCg-m #> 4                           alpha/beta inner-core Kenyon cell            #> 5                                           gamma Kenyon cell            #> 6                           alpha/beta outer-core Kenyon cell            #> 7                                      alpha/beta Kenyon cell            #> 8                                    alpha'/beta' Kenyon cell            #> 9                                        six-claw Kenyon cell            #> 10                                      five-claw Kenyon cell            #> 11                                       gamma-s1 Kenyon cell     KCg-s1 #> 12                                       gamma-s2 Kenyon cell     KCg-s2 #> 13                alpha'/beta' anterior-posterior Kenyon cell            #> 14                                          adult Kenyon cell            #> 15                                         larval Kenyon cell            #> 16                                   larval gamma Kenyon cell            #> 17                                    adult gamma Kenyon cell            #> 18                                      four-claw Kenyon cell            #> 19                            alpha'/beta' middle Kenyon cell   KCa'b'-m #> 20                                     three-claw Kenyon cell            #> 21                                       two-claw Kenyon cell            #> 22                                       immature Kenyon cell            #> 23                                     multi-claw Kenyon cell            #> 24                                    single-claw Kenyon cell            #> 25                                        gamma-s Kenyon cell            #> 26                             alpha/beta surface Kenyon cell     KCab-s #> 27                                       gamma-s3 Kenyon cell     KCg-s3 #> 28                                       gamma-s4 Kenyon cell     KCg-s4 #> 29                                        gamma-t Kenyon cell      KCg-t #> 30                             adult alpha'/beta' Kenyon cell            #> 31                            larval alpha'/beta' Kenyon cell            #> 32         alpha'/beta' anterior-posterior type 1 Kenyon cell KCa'b'-ap1 #> 33 alpha'/beta' anterior-posterior type 1 Kenyon cell of lACA            #> 34         alpha'/beta' anterior-posterior type 2 Kenyon cell KCa'b'-ap2 #> 35                        alpha/beta surface/core Kenyon cell            #> 36                           alpha/beta posterior Kenyon cell     KCab-p #> 37                                   gamma dorsal Kenyon cell      KCg-d #>               id #> 1  FBbt_00047926 #> 2  FBbt_00110929 #> 3  FBbt_00111061 #> 4  FBbt_00049111 #> 5  FBbt_00100247 #> 6  FBbt_00049112 #> 7  FBbt_00100248 #> 8  FBbt_00100249 #> 9  FBbt_00048001 #> 10 FBbt_00048000 #> 11 FBbt_00049787 #> 12 FBbt_00049788 #> 13 FBbt_00100250 #> 14 FBbt_00049825 #> 15 FBbt_00049826 #> 16 FBbt_00049827 #> 17 FBbt_00049828 #> 18 FBbt_00047999 #> 19 FBbt_00100253 #> 20 FBbt_00047998 #> 21 FBbt_00047997 #> 22 FBbt_00047995 #> 23 FBbt_00047994 #> 24 FBbt_00047993 #> 25 FBbt_00049830 #> 26 FBbt_00110930 #> 27 FBbt_00049831 #> 28 FBbt_00049832 #> 29 FBbt_00049833 #> 30 FBbt_00049834 #> 31 FBbt_00049835 #> 32 FBbt_00049836 #> 33 FBbt_00049859 #> 34 FBbt_00049837 #> 35 FBbt_00049838 #> 36 FBbt_00110931 #> 37 FBbt_00110932 #>                                                                                                      tags #> 1                          Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|has_subClass #> 2              Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|Peptidergic|has_subClass #> 3                           Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|Peptidergic #> 4                           Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|Peptidergic #> 5                                Entity|Anatomy|Cell|Class|Nervous_system|Neuron|has_subClass|hasScRNAseq #> 6                           Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|Peptidergic #> 7  Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|Peptidergic|has_subClass|hasScRNAseq #> 8                                Entity|Anatomy|Cell|Class|Nervous_system|Neuron|has_subClass|hasScRNAseq #> 9                                                         Entity|Anatomy|Cell|Class|Nervous_system|Neuron #> 10                                                        Entity|Anatomy|Cell|Class|Nervous_system|Neuron #> 11                          Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|Peptidergic #> 12                          Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|Peptidergic #> 13                         Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|has_subClass #> 14             Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|has_subClass|hasScRNAseq #> 15                         Entity|Anatomy|Cell|Class|Larva|Nervous_system|Neuron|has_subClass|hasScRNAseq #> 16                                                  Entity|Anatomy|Cell|Class|Larva|Nervous_system|Neuron #> 17 Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|Peptidergic|has_subClass|hasScRNAseq #> 18                                                        Entity|Anatomy|Cell|Class|Nervous_system|Neuron #> 19                                      Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron #> 20                                                        Entity|Anatomy|Cell|Class|Nervous_system|Neuron #> 21                                                        Entity|Anatomy|Cell|Class|Nervous_system|Neuron #> 22                                                        Entity|Anatomy|Cell|Class|Nervous_system|Neuron #> 23                                           Entity|Anatomy|Cell|Class|Nervous_system|Neuron|has_subClass #> 24                                                        Entity|Anatomy|Cell|Class|Nervous_system|Neuron #> 25             Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|Peptidergic|has_subClass #> 26                          Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|Peptidergic #> 27                          Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|Peptidergic #> 28                          Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|Peptidergic #> 29                          Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|Peptidergic #> 30             Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|has_subClass|hasScRNAseq #> 31                                                  Entity|Anatomy|Cell|Class|Larva|Nervous_system|Neuron #> 32                         Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|has_subClass #> 33                                      Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron #> 34                                      Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron #> 35             Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|Peptidergic|has_subClass #> 36                          Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|Peptidergic #> 37                          Entity|Adult|Anatomy|Cell|Cholinergic|Class|Nervous_system|Neuron|Peptidergic #>                                                                                                                         parents_label #> 1                                                                                                                   adult Kenyon cell #> 2                                                                                                 alpha/beta surface/core Kenyon cell #> 3                                                                                   Kenyon cell of main calyx|adult gamma Kenyon cell #> 4                                                                                                         alpha/beta core Kenyon cell #> 5                                                                                                                         Kenyon cell #> 6                                                                                                         alpha/beta core Kenyon cell #> 7                                           adult peptidergic neuron|neurosecretory cell of adult brain|adult Kenyon cell|sNPF neuron #> 8                                                                                                                         Kenyon cell #> 9                                                                                                              multi-claw Kenyon cell #> 10                                                                                                             multi-claw Kenyon cell #> 11                                                                                                                gamma-s Kenyon cell #> 12                                                                                                                gamma-s Kenyon cell #> 13                                                                                                     adult alpha'/beta' Kenyon cell #> 14 supraesophageal ganglion neuron|Kenyon cell|adult cholinergic neuron|adult MBp lineage neuron|adult central brain intrinsic neuron #> 15                                                                     Kenyon cell|supraesophageal ganglion neuron|larval interneuron #> 16                                                                                               gamma Kenyon cell|larval Kenyon cell #> 17                        sNPF neuron|neurosecretory cell of adult brain|adult peptidergic neuron|gamma Kenyon cell|adult Kenyon cell #> 18                                                                                                             multi-claw Kenyon cell #> 19                                                                           adult alpha'/beta' Kenyon cell|Kenyon cell of main calyx #> 20                                                                                                             multi-claw Kenyon cell #> 21                                                                                                             multi-claw Kenyon cell #> 22                                                                                                        immature neuron|Kenyon cell #> 23                                                                                                                        Kenyon cell #> 24                                                                                                                        Kenyon cell #> 25                                                                                                            adult gamma Kenyon cell #> 26                                                                                                alpha/beta surface/core Kenyon cell #> 27                                                                                                                gamma-s Kenyon cell #> 28                                                                                                                gamma-s Kenyon cell #> 29                                                                                                            adult gamma Kenyon cell #> 30                                                                                         adult Kenyon cell|alpha'/beta' Kenyon cell #> 31                                                                                        larval Kenyon cell|alpha'/beta' Kenyon cell #> 32                                                                                        alpha'/beta' anterior-posterior Kenyon cell #> 33                                                                                 alpha'/beta' anterior-posterior type 1 Kenyon cell #> 34                                                              Kenyon cell of main calyx|alpha'/beta' anterior-posterior Kenyon cell #> 35                                                                                   alpha/beta Kenyon cell|Kenyon cell of main calyx #> 36                                                                                                             alpha/beta Kenyon cell #> 37                                                                                                            adult gamma Kenyon cell #>                                                               parents_id #> 1                                                          FBbt_00049825 #> 2                                                          FBbt_00049838 #> 3                                            FBbt_00047926|FBbt_00049828 #> 4                                                          FBbt_00110929 #> 5                                                          FBbt_00003686 #> 6                                                          FBbt_00110929 #> 7                FBbt_00058202|FBbt_00052761|FBbt_00049825|FBbt_00048378 #> 8                                                          FBbt_00003686 #> 9                                                          FBbt_00047994 #> 10                                                         FBbt_00047994 #> 11                                                         FBbt_00049830 #> 12                                                         FBbt_00049830 #> 13                                                         FBbt_00049834 #> 14 FBbt_00001366|FBbt_00003686|FBbt_00058205|FBbt_00110577|FBbt_00059245 #> 15                             FBbt_00003686|FBbt_00001366|FBbt_00052047 #> 16                                           FBbt_00100247|FBbt_00049826 #> 17 FBbt_00048378|FBbt_00052761|FBbt_00058202|FBbt_00100247|FBbt_00049825 #> 18                                                         FBbt_00047994 #> 19                                           FBbt_00049834|FBbt_00047926 #> 20                                                         FBbt_00047994 #> 21                                                         FBbt_00047994 #> 22                                           FBbt_00051424|FBbt_00003686 #> 23                                                         FBbt_00003686 #> 24                                                         FBbt_00003686 #> 25                                                         FBbt_00049828 #> 26                                                         FBbt_00049838 #> 27                                                         FBbt_00049830 #> 28                                                         FBbt_00049830 #> 29                                                         FBbt_00049828 #> 30                                           FBbt_00049825|FBbt_00100249 #> 31                                           FBbt_00049826|FBbt_00100249 #> 32                                                         FBbt_00100250 #> 33                                                         FBbt_00049836 #> 34                                           FBbt_00047926|FBbt_00100250 #> 35                                           FBbt_00100248|FBbt_00047926 #> 36                                                         FBbt_00100248 #> 37                                                         FBbt_00049828  vc$neo_query_wrapper$get_type_TermInfo(list('FBbt_00003686'), summary=TRUE) %>% vc_df #>         label symbol            id #> 1 Kenyon cell     KC FBbt_00003686 #>                                                                       tags #> 1 Entity|Anatomy|Cell|Class|Nervous_system|Neuron|has_subClass|hasScRNAseq #>                                                 parents_label #> 1 anterior ectoderm derivative|mushroom body intrinsic neuron #>                    parents_id #> 1 FBbt_00025991|FBbt_00007484"},{"path":"http://natverse.org/vfbconnectr/reference/vc_install.html","id":null,"dir":"Reference","previous_headings":"","what":"Install or update the VFB connect python module — vc_install","title":"Install or update the VFB connect python module — vc_install","text":"uses reticulate::py_install install   update underlying python package.","code":""},{"path":"http://natverse.org/vfbconnectr/reference/vc_install.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install or update the VFB connect python module — vc_install","text":"","code":"vc_install(package = \"vfb-connect\", ...)"},{"path":"http://natverse.org/vfbconnectr/reference/vc_install.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install or update the VFB connect python module — vc_install","text":"package Optional package name, possible version specifier (see examples) ... Additional arguments passed reticulate::py_install","code":""},{"path":"http://natverse.org/vfbconnectr/reference/vc_install.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install or update the VFB connect python module — vc_install","text":"","code":"if (FALSE) { # \\dontrun{ vc_install()  # install a specific version vc_install(\"vfb-connect~=1.2.4\") } # }"},{"path":"http://natverse.org/vfbconnectr/reference/vfb_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Return summary of datasets available from VFB — vfb_datasets","title":"Return summary of datasets available from VFB — vfb_datasets","text":"Return summary datasets available VFB","code":""},{"path":"http://natverse.org/vfbconnectr/reference/vfb_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return summary of datasets available from VFB — vfb_datasets","text":"","code":"vfb_datasets()"},{"path":"http://natverse.org/vfbconnectr/reference/vfb_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return summary of datasets available from VFB — vfb_datasets","text":"data.frame columns including DOI","code":""},{"path":"http://natverse.org/vfbconnectr/reference/vfb_datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return summary of datasets available from VFB — vfb_datasets","text":"","code":"# \\donttest{ df=vfb_datasets() head(df) #>                                                      label symbol #> 1                                EM L1 Andrade et al. 2019        #> 2    MBONs and split-GAL4 lines that target them (Aso2014)        #> 3 split-GAL4 lines for dopaminergic neurons (AsoRubin2016)        #> 4                           EM FAFB Baltruschat et al 2021        #> 5                                EM L1 Barnes et al., 2022        #> 6                    EM FAFB Bates and Schlegel et al 2020        #>                  id                                     tags #> 1       Andrade2019 Entity|DataSet|Individual|has_image|L1EM #> 2           Aso2014      Entity|DataSet|Individual|has_image #> 3      AsoRubin2016      Entity|DataSet|Individual|has_image #> 4   Baltruschat2021 Entity|DataSet|Individual|has_image|FAFB #> 5        Barnes2022           Entity|DataSet|Individual|L1EM #> 6 BatesSchlegel2020 Entity|DataSet|Individual|has_image|FAFB #>                                                                                                  description #> 1                                                        L1 EM reconstructed neurons from Andrade et al 2019 #> 2                                                                                                       <NA> #> 3 For comparison of the properties of memories formed by optogenetic activation of individual DAN cell types #> 4                                                  FAFB EM reconstructed neurons from Baltruschat et al 2021 #> 5                                                       L1 EM reconstructed neurons from Barnes et al., 2022 #> 6                                           FAFB EM reconstructed neurons from Bates and Schlegel et al 2020 #>                                                miniref     FlyBase     PMID #> 1 Andrade et al., 2019, Curr. Biol. 29(3): 412--425.e3 FBrf0241389 30661802 #> 2                    Aso et al., 2014, eLife 3: e04577 FBrf0227179 25535793 #> 3                 Aso and Rubin, 2016, eLife 5: e16135 FBrf0233230 27441388 #> 4   Baltruschat et al., 2021, Cell Rep. 34(11): 108871 FBrf0248487 33730583 #> 5        Barnes et al., 2022, PLoS ONE 17(4): e0266064 FBrf0253082 35377898 #> 6                      Bates and Schlegel et al., 2020                      #>                            DOI #> 1    10.1016/j.cub.2018.12.012 #> 2          10.7554/eLife.04577 #> 3          10.7554/eLife.16135 #> 4 10.1016/j.celrep.2021.108871 #> 5 10.1371/journal.pone.0266064 #> 6    10.1016/j.cub.2020.06.042 subset(df, !nzchar(DOI)) #>                                              label symbol                   id #> 93        Split-GAL4 lines from Baker et al., 2022              SplitBaker2022 #> 96       Split-GAL4 lines from Cheong et al., 2024             SplitCheong2024 #> 100        Split-GAL4 lines from Feng et al., 2014               SplitFeng2014 #> 111     Split-GAL4 lines from Longden et al., 2023            SplitLongden2023 #> 118        Split-GAL4 lines from Reyn et al., 2017               SplitReyn2017 #> 119       Split-GAL4 lines from Rubin et al., 2024              SplitRubin2024 #> 120 Split-GAL4 lines from Schlichting et al., 2019        SplitSchlichting2019 #> 126    Split-GAL4 lines from Takemura et al., 2017           SplitTakemura2017 #> 130     Split-GAL4 lines from Tuthill et al., 2013            SplitTuthill2013 #> 131     Split-GAL4 lines from Vijayan et al., 2023            SplitVijayan2023 #> 145            L3 Larval CNS Template (Truman2016)                  Truman2016 #> 146              Truman Larval Flip-Out Collection              TrumanWood2018 #> 147              Truman Larval Flip-Out Collection        TrumanWood2018public #> 155             L3 neuropils (WoodHartenstein2018)         WoodHartenstein2018 #>                                    tags #> 93            Entity|DataSet|Individual #> 96            Entity|DataSet|Individual #> 100           Entity|DataSet|Individual #> 111           Entity|DataSet|Individual #> 118           Entity|DataSet|Individual #> 119           Entity|DataSet|Individual #> 120           Entity|DataSet|Individual #> 126           Entity|DataSet|Individual #> 130           Entity|DataSet|Individual #> 131           Entity|DataSet|Individual #> 145 Entity|DataSet|Individual|has_image #> 146 Entity|DataSet|Individual|has_image #> 147 Entity|DataSet|Individual|has_image #> 155 Entity|DataSet|Individual|has_image #>                                                                                                                                                         description #> 93                                                                                                                         Split-GAL4 lines from Baker et al., 2022 #> 96                                                                                                                        Split-GAL4 lines from Cheong et al., 2024 #> 100                                                                                                                         Split-GAL4 lines from Feng et al., 2014 #> 111                                                                                                                      Split-GAL4 lines from Longden et al., 2023 #> 118                                                                                                                         Split-GAL4 lines from Reyn et al., 2017 #> 119                                                                                                                        Split-GAL4 lines from Rubin et al., 2024 #> 120                                                                                                                  Split-GAL4 lines from Schlichting et al., 2019 #> 126                                                                                                                     Split-GAL4 lines from Takemura et al., 2017 #> 130                                                                                                                      Split-GAL4 lines from Tuthill et al., 2013 #> 131                                                                                                                      Split-GAL4 lines from Vijayan et al., 2023 #> 145                                                               Template image by James W. Truman and the Fly Light Project Team at HHMI Janelia Research Campus. #> 146 A selection of neurons from specimens created by Dr. Jim Truman at Janelia Research Campus using the multicolor flip out technique from the FlyLight GMR lines. #> 147                                                                       Images by James W. Truman and the Fly Light Project Team at HHMI Janelia Research Campus. #> 155                                                                                                                                                            <NA> #>     miniref FlyBase PMID DOI #> 93                           #> 96                           #> 100                          #> 111                          #> 118                          #> 119                          #> 120                          #> 126                          #> 130                          #> 131                          #> 145                          #> 146                          #> 147                          #> 155                          # }"},{"path":"http://natverse.org/vfbconnectr/reference/vfbconnectr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"vfbconnectr: An R Interface to vfb-connect to query virtualflybrain.org — vfbconnectr-package","title":"vfbconnectr: An R Interface to vfb-connect to query virtualflybrain.org — vfbconnectr-package","text":"Provides R interface Python package vfb-connect. 'VFB_connect' Python lib wraps data / knowledgebase query endpoints returns 'VFB_json'.","code":""},{"path":"http://natverse.org/vfbconnectr/reference/vfbconnectr-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"vfbconnectr: An R Interface to vfb-connect to query virtualflybrain.org — vfbconnectr-package","text":"vfbconnectr provides simple R wrapper (via   reticulate)   VFB_connect Python library   enables programmatic access https://virtualflybrain.org   website associated services. VFB_connect developed core VFB   team.","code":""},{"path":[]},{"path":"http://natverse.org/vfbconnectr/reference/vfbconnectr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"vfbconnectr: An R Interface to vfb-connect to query virtualflybrain.org — vfbconnectr-package","text":"Maintainer: Gregory Jefferis jefferis@gmail.com (ORCID)","code":""},{"path":"http://natverse.org/vfbconnectr/reference/vfbconnectr-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"vfbconnectr: An R Interface to vfb-connect to query virtualflybrain.org — vfbconnectr-package","text":"","code":"if (FALSE) { # \\dontrun{ # make a VfbConnect to access the Python module vc=VfbConnect() } # }"}]
